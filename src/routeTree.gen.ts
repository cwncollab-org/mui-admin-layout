/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as NotFoundImport } from './routes/not-found'
import { Route as IndexImport } from './routes/index'
import { Route as ThemeExampleLayoutImport } from './routes/theme-example/_layout'
import { Route as LayoutProviderExampleLayoutImport } from './routes/layout-provider-example/_layout'
import { Route as ThemeExampleLayoutIndexImport } from './routes/theme-example/_layout/index'
import { Route as LayoutProviderExampleLayoutIndexImport } from './routes/layout-provider-example/_layout/index'
import { Route as LayoutProviderExampleLayoutLongPageImport } from './routes/layout-provider-example/_layout/long-page'
import { Route as LayoutProviderExampleLayoutControlImport } from './routes/layout-provider-example/_layout/control'

// Create Virtual Routes

const ThemeExampleImport = createFileRoute('/theme-example')()
const LayoutProviderExampleImport = createFileRoute(
  '/layout-provider-example',
)()

// Create/Update Routes

const ThemeExampleRoute = ThemeExampleImport.update({
  id: '/theme-example',
  path: '/theme-example',
  getParentRoute: () => rootRoute,
} as any)

const LayoutProviderExampleRoute = LayoutProviderExampleImport.update({
  id: '/layout-provider-example',
  path: '/layout-provider-example',
  getParentRoute: () => rootRoute,
} as any)

const NotFoundRoute = NotFoundImport.update({
  id: '/not-found',
  path: '/not-found',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const ThemeExampleLayoutRoute = ThemeExampleLayoutImport.update({
  id: '/_layout',
  getParentRoute: () => ThemeExampleRoute,
} as any)

const LayoutProviderExampleLayoutRoute =
  LayoutProviderExampleLayoutImport.update({
    id: '/_layout',
    getParentRoute: () => LayoutProviderExampleRoute,
  } as any)

const ThemeExampleLayoutIndexRoute = ThemeExampleLayoutIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => ThemeExampleLayoutRoute,
} as any)

const LayoutProviderExampleLayoutIndexRoute =
  LayoutProviderExampleLayoutIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LayoutProviderExampleLayoutRoute,
  } as any)

const LayoutProviderExampleLayoutLongPageRoute =
  LayoutProviderExampleLayoutLongPageImport.update({
    id: '/long-page',
    path: '/long-page',
    getParentRoute: () => LayoutProviderExampleLayoutRoute,
  } as any)

const LayoutProviderExampleLayoutControlRoute =
  LayoutProviderExampleLayoutControlImport.update({
    id: '/control',
    path: '/control',
    getParentRoute: () => LayoutProviderExampleLayoutRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/not-found': {
      id: '/not-found'
      path: '/not-found'
      fullPath: '/not-found'
      preLoaderRoute: typeof NotFoundImport
      parentRoute: typeof rootRoute
    }
    '/layout-provider-example': {
      id: '/layout-provider-example'
      path: '/layout-provider-example'
      fullPath: '/layout-provider-example'
      preLoaderRoute: typeof LayoutProviderExampleImport
      parentRoute: typeof rootRoute
    }
    '/layout-provider-example/_layout': {
      id: '/layout-provider-example/_layout'
      path: '/layout-provider-example'
      fullPath: '/layout-provider-example'
      preLoaderRoute: typeof LayoutProviderExampleLayoutImport
      parentRoute: typeof LayoutProviderExampleRoute
    }
    '/theme-example': {
      id: '/theme-example'
      path: '/theme-example'
      fullPath: '/theme-example'
      preLoaderRoute: typeof ThemeExampleImport
      parentRoute: typeof rootRoute
    }
    '/theme-example/_layout': {
      id: '/theme-example/_layout'
      path: '/theme-example'
      fullPath: '/theme-example'
      preLoaderRoute: typeof ThemeExampleLayoutImport
      parentRoute: typeof ThemeExampleRoute
    }
    '/layout-provider-example/_layout/control': {
      id: '/layout-provider-example/_layout/control'
      path: '/control'
      fullPath: '/layout-provider-example/control'
      preLoaderRoute: typeof LayoutProviderExampleLayoutControlImport
      parentRoute: typeof LayoutProviderExampleLayoutImport
    }
    '/layout-provider-example/_layout/long-page': {
      id: '/layout-provider-example/_layout/long-page'
      path: '/long-page'
      fullPath: '/layout-provider-example/long-page'
      preLoaderRoute: typeof LayoutProviderExampleLayoutLongPageImport
      parentRoute: typeof LayoutProviderExampleLayoutImport
    }
    '/layout-provider-example/_layout/': {
      id: '/layout-provider-example/_layout/'
      path: '/'
      fullPath: '/layout-provider-example/'
      preLoaderRoute: typeof LayoutProviderExampleLayoutIndexImport
      parentRoute: typeof LayoutProviderExampleLayoutImport
    }
    '/theme-example/_layout/': {
      id: '/theme-example/_layout/'
      path: '/'
      fullPath: '/theme-example/'
      preLoaderRoute: typeof ThemeExampleLayoutIndexImport
      parentRoute: typeof ThemeExampleLayoutImport
    }
  }
}

// Create and export the route tree

interface LayoutProviderExampleLayoutRouteChildren {
  LayoutProviderExampleLayoutControlRoute: typeof LayoutProviderExampleLayoutControlRoute
  LayoutProviderExampleLayoutLongPageRoute: typeof LayoutProviderExampleLayoutLongPageRoute
  LayoutProviderExampleLayoutIndexRoute: typeof LayoutProviderExampleLayoutIndexRoute
}

const LayoutProviderExampleLayoutRouteChildren: LayoutProviderExampleLayoutRouteChildren =
  {
    LayoutProviderExampleLayoutControlRoute:
      LayoutProviderExampleLayoutControlRoute,
    LayoutProviderExampleLayoutLongPageRoute:
      LayoutProviderExampleLayoutLongPageRoute,
    LayoutProviderExampleLayoutIndexRoute:
      LayoutProviderExampleLayoutIndexRoute,
  }

const LayoutProviderExampleLayoutRouteWithChildren =
  LayoutProviderExampleLayoutRoute._addFileChildren(
    LayoutProviderExampleLayoutRouteChildren,
  )

interface LayoutProviderExampleRouteChildren {
  LayoutProviderExampleLayoutRoute: typeof LayoutProviderExampleLayoutRouteWithChildren
}

const LayoutProviderExampleRouteChildren: LayoutProviderExampleRouteChildren = {
  LayoutProviderExampleLayoutRoute:
    LayoutProviderExampleLayoutRouteWithChildren,
}

const LayoutProviderExampleRouteWithChildren =
  LayoutProviderExampleRoute._addFileChildren(
    LayoutProviderExampleRouteChildren,
  )

interface ThemeExampleLayoutRouteChildren {
  ThemeExampleLayoutIndexRoute: typeof ThemeExampleLayoutIndexRoute
}

const ThemeExampleLayoutRouteChildren: ThemeExampleLayoutRouteChildren = {
  ThemeExampleLayoutIndexRoute: ThemeExampleLayoutIndexRoute,
}

const ThemeExampleLayoutRouteWithChildren =
  ThemeExampleLayoutRoute._addFileChildren(ThemeExampleLayoutRouteChildren)

interface ThemeExampleRouteChildren {
  ThemeExampleLayoutRoute: typeof ThemeExampleLayoutRouteWithChildren
}

const ThemeExampleRouteChildren: ThemeExampleRouteChildren = {
  ThemeExampleLayoutRoute: ThemeExampleLayoutRouteWithChildren,
}

const ThemeExampleRouteWithChildren = ThemeExampleRoute._addFileChildren(
  ThemeExampleRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/not-found': typeof NotFoundRoute
  '/layout-provider-example': typeof LayoutProviderExampleLayoutRouteWithChildren
  '/theme-example': typeof ThemeExampleLayoutRouteWithChildren
  '/layout-provider-example/control': typeof LayoutProviderExampleLayoutControlRoute
  '/layout-provider-example/long-page': typeof LayoutProviderExampleLayoutLongPageRoute
  '/layout-provider-example/': typeof LayoutProviderExampleLayoutIndexRoute
  '/theme-example/': typeof ThemeExampleLayoutIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/not-found': typeof NotFoundRoute
  '/layout-provider-example': typeof LayoutProviderExampleLayoutIndexRoute
  '/theme-example': typeof ThemeExampleLayoutIndexRoute
  '/layout-provider-example/control': typeof LayoutProviderExampleLayoutControlRoute
  '/layout-provider-example/long-page': typeof LayoutProviderExampleLayoutLongPageRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/not-found': typeof NotFoundRoute
  '/layout-provider-example': typeof LayoutProviderExampleRouteWithChildren
  '/layout-provider-example/_layout': typeof LayoutProviderExampleLayoutRouteWithChildren
  '/theme-example': typeof ThemeExampleRouteWithChildren
  '/theme-example/_layout': typeof ThemeExampleLayoutRouteWithChildren
  '/layout-provider-example/_layout/control': typeof LayoutProviderExampleLayoutControlRoute
  '/layout-provider-example/_layout/long-page': typeof LayoutProviderExampleLayoutLongPageRoute
  '/layout-provider-example/_layout/': typeof LayoutProviderExampleLayoutIndexRoute
  '/theme-example/_layout/': typeof ThemeExampleLayoutIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/not-found'
    | '/layout-provider-example'
    | '/theme-example'
    | '/layout-provider-example/control'
    | '/layout-provider-example/long-page'
    | '/layout-provider-example/'
    | '/theme-example/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/not-found'
    | '/layout-provider-example'
    | '/theme-example'
    | '/layout-provider-example/control'
    | '/layout-provider-example/long-page'
  id:
    | '__root__'
    | '/'
    | '/not-found'
    | '/layout-provider-example'
    | '/layout-provider-example/_layout'
    | '/theme-example'
    | '/theme-example/_layout'
    | '/layout-provider-example/_layout/control'
    | '/layout-provider-example/_layout/long-page'
    | '/layout-provider-example/_layout/'
    | '/theme-example/_layout/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  NotFoundRoute: typeof NotFoundRoute
  LayoutProviderExampleRoute: typeof LayoutProviderExampleRouteWithChildren
  ThemeExampleRoute: typeof ThemeExampleRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  NotFoundRoute: NotFoundRoute,
  LayoutProviderExampleRoute: LayoutProviderExampleRouteWithChildren,
  ThemeExampleRoute: ThemeExampleRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/not-found",
        "/layout-provider-example",
        "/theme-example"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/not-found": {
      "filePath": "not-found.tsx"
    },
    "/layout-provider-example": {
      "filePath": "layout-provider-example",
      "children": [
        "/layout-provider-example/_layout"
      ]
    },
    "/layout-provider-example/_layout": {
      "filePath": "layout-provider-example/_layout.tsx",
      "parent": "/layout-provider-example",
      "children": [
        "/layout-provider-example/_layout/control",
        "/layout-provider-example/_layout/long-page",
        "/layout-provider-example/_layout/"
      ]
    },
    "/theme-example": {
      "filePath": "theme-example",
      "children": [
        "/theme-example/_layout"
      ]
    },
    "/theme-example/_layout": {
      "filePath": "theme-example/_layout.tsx",
      "parent": "/theme-example",
      "children": [
        "/theme-example/_layout/"
      ]
    },
    "/layout-provider-example/_layout/control": {
      "filePath": "layout-provider-example/_layout/control.tsx",
      "parent": "/layout-provider-example/_layout"
    },
    "/layout-provider-example/_layout/long-page": {
      "filePath": "layout-provider-example/_layout/long-page.tsx",
      "parent": "/layout-provider-example/_layout"
    },
    "/layout-provider-example/_layout/": {
      "filePath": "layout-provider-example/_layout/index.tsx",
      "parent": "/layout-provider-example/_layout"
    },
    "/theme-example/_layout/": {
      "filePath": "theme-example/_layout/index.tsx",
      "parent": "/theme-example/_layout"
    }
  }
}
ROUTE_MANIFEST_END */
